# vi: set ft=ruby :

# PLEASE CHANGE
STUDENT = nil
PUB_NET = 'XX.XX.XX.'
PUB_SUB = 21

# define private network segments
PRIV_NET = '192.168.10.'
PRIV_NET_START = 20

# minion/worker parameters, please reduce CPU/MEM if you wish to create more than one box on laptop
MEM = 4096
CPU = 4
IMG = 'ubuntu/xenial64'
BOXES = 2

DEPLOY_MASTER = false
MASTER_IP = PRIV_NET + PRIV_NET_START.to_s
MASTER_CPU = 2
MASTER_MEM = 512
SALT = 'stable'


Vagrant.configure(2) do |config|
  # provision master separately
  if DEPLOY_MASTER == true
    config.vm.define 'master' do |master|
      master.vm.box = IMG 
      master.vm.hostname = 'master'
      master.vm.network :private_network, ip: MASTER_IP
      master.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--cpus", MASTER_CPU]
        vb.customize ["modifyvm", :id, "--memory", MASTER_MEM]
      end
      master.vm.provision "shell", path: "fixv6.sh"
      master.vm.provision :salt do |salt|
        salt.master_config = "conf/master"
        salt.masterless = false
        salt.run_highstate = false
        salt.install_type = SALT
        salt.install_master = true
      end
    end
  end
  # provision workers as defined by user
  (1..BOXES).each do |count|

    # per box local variables
    name = 'host-' + count.to_s
    if STUDENT != nil
      hostname = 'host-' + count.to_s + '-' + STUDENT.to_s
    else
      hostname = name
    end
    ip = PRIV_NET + (PRIV_NET_START + count).to_s
    if STUDENT != nil
      pub_ip  = PUB_NET + (STUDENT + count - 1).to_s
    end
    config.vm.define name do |config|
      config.vm.box = IMG
      config.vm.hostname = hostname
      config.vm.network 'private_network',
        ip: ip
      if STUDENT != nil
        config.vm.network 'public_network',
          ip: pub_ip,
          netmask: PUB_SUB
      end
      config.vm.provider "virtualbox" do |v|
        v.customize ["modifyvm", :id, "--memory", MEM]
        v.customize ["modifyvm", :id, "--cpus", CPU]
      end
      # only create salt env if user actually wants to create a master
      config.vm.provision "shell", path: "fixv6.sh"
      if DEPLOY_MASTER == true
        config.vm.provision "shell",
          inline: "grep salt /etc/hosts || sudo echo \"#{MASTER_IP}\"  salt >> /etc/hosts"
        config.vm.provision :salt do |salt|
          salt.minion_config = "conf/minion"
          salt.masterless = false
          salt.run_highstate = false
          salt.install_type = SALT
          salt.install_master = false
        end
      end
    end
  end
end
